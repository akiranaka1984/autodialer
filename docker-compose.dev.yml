services:
  # バックエンドサーバー
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5000"  # 外部ポートを5001に変更
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: autodialer
      # モックモードを無効化してTwilioを使用
      MOCK_ASTERISK: "false"
      USE_TWILIO: "false"
      # Twilio設定
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      PUBLIC_URL: ${PUBLIC_URL}
      # 追加: ログレベルの設定
      LOG_LEVEL: "debug"
    depends_on:
      mysql:
        condition: service_healthy  # MySQLが完全に起動するまで待機
    restart: unless-stopped  # 不意の終了時に自動再起動
    networks:
      - autodialer-network
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      #interval: 10s
      #timeout: 5s
      #retries: 3
      #start_period: 15s

  # フロントエンドサーバー
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3003:3000"  # 外部ポートを3003に変更
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/.env.development:/app/.env.development
    environment:
      NODE_ENV: development
      # 修正: バックエンドURLをホスト側の5001ポートに変更
      #REACT_APP_API_URL: http://localhost:5001/api
      CHOKIDAR_USEPOLLING: "true"
      WDS_SOCKET_HOST: localhost
      WDS_SOCKET_PORT: 3003
      DANGEROUSLY_DISABLE_HOST_CHECK: true  # 開発環境のみ
      PORT: 3000
      HOST: "0.0.0.0"
    depends_on:
      - backend
    networks:
      - autodialer-network

  # データベース
  mysql:
    image: mysql:8.0
    platform: linux/arm64
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: autodialer
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --init-connect='SET NAMES utf8mb4'
      - --skip-name-resolve  # 名前解決をスキップしてパフォーマンス向上
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init-only:/docker-entrypoint-initdb.d
    networks:
      - autodialer-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s

networks:
  autodialer-network:
    driver: bridge

volumes:
  mysql_data: